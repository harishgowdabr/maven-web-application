pipeline{

agent any

tools {
maven 'maven-3.8.2'
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '6', numToKeepStr: '5')
  timestamps()
}

triggers{
	//Poll SCM
	//pollSCM('* * * * *')
	//BuildPeriodically
	//cron('* * * * *')
	//GitHub WebHook
	githubPush()
}
parameters {
  choice choices: ['master', 'dev', 'qa'], description: 'Please  select Branch name', name: 'BranchName'
  string defaultValue: 'NA', description: 'Please enter RevisionNumber', name: 'RevisionNumber', trim: true
}


    stages{
        stage('Cloning the code'){
            steps{
                 sh 'echo "---cloning the code from Github---"'
                     sh "echo  RevsionNumber is : ${params.RevisionNumber}"
			  sh "echo  Branch is : ${params.BranchName}"
        git branch: '${params.BranchName}', credentialsId: '45ea0ad7-34b3-4ae2-8be8-0b1432262ead',
        url: 'https://github.com/harishgowdabr/maven-web-application.git'

            
            }//step
        }//stage

        stage('Building the war file'){
        steps{
        sh "mvn clean package -DMaven.test.skip=true"
        //mvn clean package -Dskip.Tests
        }
        }
        
        stage('sonar Report'){
        steps{
	sh "pwd"
        sh "mvn  sonar:sonar"
     
        }
        }
        
        stage('INTO Remot Repo'){
        steps{
	sh "pwd"
        sh "mvn clean deploy"
     
        }
        }
        stage ('Depoying to Tomcat'){
       steps{
        sshagent(['74499b02-e88e-440d-aaaa-0dd9c916e074']) {
                    sh "pwd"
      sh "scp -o strictHostKeyChecking=no target/maven-web-application.war ec2-user@3.109.202.21:/opt/apache-tomcat-9.0.56/webapps/"
     }//shh
     }//step
     }//stage
    }//stages
}//pipeline
